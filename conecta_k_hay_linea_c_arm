4 argumentos
r0 t
r1 fila
r2 columna 
r3 color

variables locales
r4 N_DELTAS
r5 deltas_fila 
r6 deltas_columna
r7 i
r8 linea
r9 long_linea

mov r4, #4
ldr r5, 
ldr r6, 
mov r7, #0
mov r8, #FALSE
mov r9, #0

FOR	cmp r7, r4
	bge NOT_FOUND
	cmp r8, #FALSE
	bne NOT_FOUND
	
	
	ldr r10, r5 + r7	// r10 = deltas_fila[i]
	ldr r11, r5 + r7	// r11 = deltas_columna[i]
	push{r0}	// Guardamos t
	push {r10,r11}	// Pasamos los argumentos por la pila
	bl conecta_k_buscar_alimento_c
	mov r9, r0	//long_linea = conecta_k_buscar_alimento_c(...)
	pop{r0}	// Recuperamos t
	cmp r9, r4	//long_linea >= N_DELTAS
	bge FOUND
	
	sub r1,r1,r5	//fila-deltas_fila[i]
	sub r2,r2,r6	//columna-deltas_columna[i]

	ldr r10, r5 + r7	// r10 = deltas_fila[i]
	ldr r11, r5 + r7	// r11 = deltas_columna[i]
	sub r10, r10,r10 lsl#1	// r10 = -r10
	sub r11, r11, r11 lsl#1	//r11 = -r11
	push {r0}	//Guardamos t
	push {r10, r11}
	bl conecta_k_buscar_alimento_c
	add r9, r9, r0	// long_linea + conecta_k_buscar_alimento_c(...)
	pop {r0} // Recuperamos t
	cmp r9, r4
	bge FOUND

	add r7, r7, #1	//++i
	b FOR
	
NOT_FOUND	mov r8, #FALSE
		b DONE

FOUND 	mov r8, #TRUE

DONE 	pop {pc}
	